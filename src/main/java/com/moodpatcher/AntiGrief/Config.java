package com.moodpatcher.AntiGrief;

import java.io.File;
import java.io.FileWriter;
import java.time.LocalDateTime;

import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.plugin.java.JavaPlugin;

public abstract class Config {
    static JavaPlugin plugin;

    public static void start(JavaPlugin javaPlugin) {
        plugin = javaPlugin;

        try {
            File dataFolder = plugin.getDataFolder();
            if (!dataFolder.exists()) {
                dataFolder.mkdirs();
            }

            File configFile = new File(dataFolder, "config.yaml");
            if (!configFile.exists()) {
                configFile.createNewFile();

                FileWriter writer = new FileWriter(configFile);
                writer.write("# Generated by " + (Config.class.getCanonicalName()) + " at " + LocalDateTime.now() + "\n");
                writer.write("\n");
                writer.write("# Suppported languages: EN, HU\n");
                writer.write("language: EN\n");
                writer.write("# Placed blocks' protection radius:\n");
                writer.write("protection_radius: 4\n");
                writer.write("# Raiding enabled\n");
                writer.write("raiding_enabled: true\n");
                writer.write("# Number of Fire Charges required to raid\n");
                writer.write("fire_charges: 32\n");
                writer.write("# OP blocks can be raided\n");
                writer.write("op_raid: false\n");
                writer.write("# OPs bypass zone protection\n");
                writer.write("op_bypass: false\n");
                writer.close();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static String read(String settingName) {
        File configFile = new File(plugin.getDataFolder(), "config.yaml");
        FileConfiguration config = YamlConfiguration.loadConfiguration(configFile);

        return config.getString(settingName);
    }
}
